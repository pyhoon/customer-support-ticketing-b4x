AppType=StandardJava
Build1=Default,my.computerise.support,hu2_acceptall
Build2=Publish,my.computerise.support,hu2_acceptall,publish
File1=config.example
FileGroup1=Default Group
Group=App
Library1=byteconverter
Library10=velocity
Library2=encryption
Library3=javaobject
Library4=jcore
Library5=jnet
Library6=jserver
Library7=json
Library8=jsql
Library9=jstringutils
Module1=ApiHandler
Module10=HttpsFilter
Module11=MessagesController
Module12=MiniORM
Module13=ModelsController
Module14=PrioritiesController
Module15=RolesController
Module16=StaffsController
Module17=StatusesController
Module18=TicketsController
Module19=TypesController
Module2=BrandsController
Module20=Utility
Module21=WebHandler
Module3=CategoriesController
Module4=ClientsController
Module5=Connector
Module6=CorsFilter
Module7=EquipmentsController
Module8=Hasher
Module9=HelpHandler
NumberOfFiles=1
NumberOfLibraries=10
NumberOfModules=21
Version=9.8
@EndOfDesignText@
#Region Project Attributes
'# Product: 		Support Ticketing System
'# Version:			0.12
'# Description: 	B4J Server App (powered by EndsMeet framework + Web API Server 2.03)
'# Developer:		Aeric Poon
'# Email:       	aeric80@gmail.com
'# Copyright:   	Computerise System Solutions 2023
'# License:			Proprietary (Single Developer)
'# Paypal:			https://paypal.me/aeric80/
'
'# Disclaimer:
'# This source code is provided as it is. 
'# No warranty or professional support is provided after the purchase. 
'# This license entitles for bug fixes and minor subversions updates only.
'# No further customization or programming services included.
'# You may use this source code and modify for personal and commercial use 
'# but you are not allowed to redistribute this source code as a product.
'# Meaning you cannot claim the original code as your own creation and resell it.
'# Other open source projects included in this project follow the original license
'# and intellectual property of the respective owners.

' Objects folder: 	file:///C:/B4X/Development/Support/Objects (Bring to front)
' Objects folder: 	ide://run?file=%WINDIR%\SysWOW64\explorer.exe&Args=%PROJECT%\Objects

' Main module: 		ide://goto?Module=Main&Sub=ConfigureServer
' TicketController: ide://goto?Module=TicketsController&Sub=GetTicketsSortedBy
' ApiHandler: 		ide://goto?Module=ApiHandler&Sub=ProcessRequest
' HelpHandler: 		ide://goto?Module=HelpHandler&Sub=GenerateVerbScript

' Click to publish: ide://run?file=%JAVABIN%\jar.exe&WorkingDirectory=../Objects&Args=-cMf&Args=Publish.zip&Args=www&Args=templates&Args=*.jar&Args=*.ini&Args=*.db&Args=help.*
#CommandLineArgs:
#MergeLibraries: True
#End Region

#Region AdditionalJar
' MySQL connector
 #AdditionalJar: mysql-connector-java-5.1.49
' #AdditionalJar: mysql-connector-java-8.0.30
' SQLite connector
 #AdditionalJar: sqlite-jdbc-3.41.2.1
' SQL Express
'#AdditionalJar: jtds-1.3.2
'#AdditionalJar: imgscalr-lib-4.2
' JSON Web Token
'#AdditionalJar: java-jwt-4.2.1
'#AdditionalJar: jackson-core-2.14.1
'#AdditionalJar: jackson-databind-2.14.1
'#AdditionalJar: jackson-annotations-2.14.1
#End Region

' <link>Click to browse|https://localhost:6060/support</link>
Sub Process_Globals
	Public srvr As Server
	Public DB As Connector
	Public ROOT_URL As String
	Public ROOT_PATH As String
	Public API_PATH As String
	Public API_NAME As String
	Public API_VERSIONING As String
	Public SERVER_PORT As Int = 6000
	Public SSL_PORT As Int
	Public TIMEZONE As Int
	Public SERVER_TIME As String
	Public Config As Map
	Public Element As Element
	Public Controllers As List
	Public SimpleResponse As Boolean
	Public SimpleResponseFormat As String
	Public const VERSION As String = "0.12"
	Public const PREFIX As String = "Support_v012_"
	Type ApiElement (Name As String, Versioning As Boolean)
	Type WebElement (Root As String, Path As String)
	Type Element (Web As WebElement, Api As ApiElement, Elements As List, PathIndex As Int, ApiVersionIndex As Int, ApiControllerIndex As Int, WebControllerIndex As Int)
End Sub

Sub AppStart (Args() As String)
	srvr.Initialize("")		' Create the server
	ReadConfig				' Read environment settings
	ConfigureServer			' Configure the server
	srvr.Start				' Start the server
	StartMessageLoop
End Sub

Sub ReadConfig
	If Not(File.Exists(File.DirApp, "config.ini")) Then
		File.Copy(File.DirAssets, "config.example", File.DirApp, "config.ini")
	End If
	Config = Utility.ReadMapFile(File.DirApp, "config.ini")
	Config.Put("VERSION", VERSION)
End Sub

Private Sub ConfigureServer
	ConfigurePaths								' App URL / Paths
	ConfigureElements							' Pretty URL structures / hierarchy
	ConfigureHandlers							' Server Handlers
	ConfigureControllers						' App Controllers
    #Region Advanced	
	ConfigurePort								' Server Port
	ConfigureSSL								' SSL Port
	ConfigureCORS								' CrossOriginFilter
	ConfigureStaticFiles 						' Configure Static Files Folder and Browsing Permission
	ConfigureTimezone							' Adjust timezone if server located in different timezone
	ConfigureDatabase							' Enable Database
	ConfigureResponse							' JSON Response Format
	ConfigureWelcomeText						' Show information in Logs when server starts
	#End Region
End Sub

' First thing to configure
' This setting is determined by the values in Config.ini (inside Objects folder).
' For starting, just let the default values.
' You can edit the Config.ini file using any Text Editor.
Public Sub ConfigurePaths
	ROOT_URL = Config.Get("ROOT_URL")
	If SERVER_PORT <> 80 Then
		ROOT_URL = ROOT_URL & ":" & SERVER_PORT
	End If
	If SSL_PORT <> 0 Then
		' Update ROOT_URL
		ROOT_URL = ROOT_URL.Replace("http:", "https:")
		ROOT_URL = ROOT_URL.Replace($":${SERVER_PORT}"$, $":${SSL_PORT}"$)
	End If
	Config.Put("ROOT_URL", ROOT_URL)
	
	ROOT_PATH = Config.Get("ROOT_PATH")
	If ROOT_PATH = "" Then ROOT_PATH = "/"
	If ROOT_PATH <> "/" Then
		If ROOT_PATH.StartsWith("/") = False Then ROOT_PATH = "/" & ROOT_PATH
		If ROOT_PATH.EndsWith("/") = False Then ROOT_PATH = ROOT_PATH & "/"
	End If
	Config.Put("ROOT_PATH", ROOT_PATH)
	
	API_NAME = Config.Get("API_NAME")
	If API_NAME.Contains("/") Then
		Log($"API name cannot contains forward slash symbol!"$)
		Log($"Application is terminated."$)
		ExitApplication
		Return
	End If
	API_PATH = IIf(API_NAME.Length > 0, API_NAME & "/", "")
	API_VERSIONING = Config.Get("API_VERSIONING").As(String).ToUpperCase
End Sub

' Configure this after ConfigurePaths
' This setting depends automatically by ConfigurePaths above.
' Nothing is needed to be configured here.
Public Sub ConfigureElements
	Element.Initialize
	Element.Elements.Initialize
	
	Element.Web.Root = "/" ' just a placeholder
	Element.Elements.Add(Element.Web.Root)
	
	Element.Web.Path = ROOT_PATH
	If Element.Web.Path.EqualsIgnoreCase("/") = False Then
		Element.Elements.Add(Element.Web.Path)
		Element.PathIndex = 1
	End If
	
	Element.Api.Name = API_NAME
	If Element.Api.Name.EqualsIgnoreCase("") = False Then
		Element.Elements.Add(Element.Api.Name)
	End If
	
	If API_VERSIONING = "TRUE" Then
		Element.Api.Versioning = True
		Element.Elements.Add("version") ' just a placeholder
	Else
		Element.Api.Versioning = False
	End If
	
	Element.ApiVersionIndex = Element.Elements.Size - 1
	Element.ApiControllerIndex = Element.Elements.Size
	Element.WebControllerIndex = Element.Elements.Size - IIf(Element.Api.Name.EqualsIgnoreCase(""), 0, 1) - IIf(Element.Api.Versioning, 1, 0) ' or just Element.PathIndex + 1
End Sub

' Configure this after ConfigureElements
' By default, ApiHandler is the only required handler.
' If WebHandler is enabled (uncommented), then we can use it to route non-API URL to show web front-end such as home page.
' If HelpHandler is enabled (by default), API documentation is available for debugging the API without client app or Postman.
' If HelpHandler is disabled (commented) then API documentation is not available for debugging. This handler is not required in release mode.
Public Sub ConfigureHandlers
	' =======================================================================
	' Web route (optional)
	' =======================================================================
	' Note: When only WebHandler is enabled, suitable for creating a website
	srvr.AddHandler(ROOT_PATH & "*", "WebHandler", False) 						' Add Web handler (optional)
	
	If API_NAME.EqualsIgnoreCase("") Then
		' ===================================================================
		' API route - /web/ (root path is used for all APIs)
		' ===================================================================
		' Note: You can either enable WebHandler or ApiHandler, not both     
		srvr.AddHandler(ROOT_PATH & "*", "ApiHandler", False) 					' Add API handler (WebHandler disabled)
	Else									
		' ===================================================================
		' API route - /web/api/ (recommended)
		' ===================================================================
		' Note: You can enable both WebHandler and ApiHandler
		srvr.AddHandler(ROOT_PATH & API_PATH & "*", "ApiHandler", False) 		' Add API handler
	End If
	
	' =======================================================================
	' Help route
	' =======================================================================
	srvr.AddHandler(ROOT_PATH & "help", "HelpHandler", False) 					' Add Help page (optional)
	
	' =======================================================================
	' Web Sockets route
	' =======================================================================
	'srvr.AddWebSocket("/time", "WSTime")										' Add Web socket (optional)
End Sub

' Configure this after ConfigureHandlers
' If HelpHandler is used, this configuration includes which controller class to display on the API documentation page. 
' By default, only DataController is added. 
' When you have more controllers, you can add them here.
' You can be hide some APIs using #Hide keyword
Public Sub ConfigureControllers
	Controllers.Initialize
	Controllers.Add("TicketsController")
	Controllers.Add("ClientsController")
	Controllers.Add("MessagesController")
	Controllers.Add("EquipmentsController")
	Controllers.Add("StaffsController")
	Controllers.Add("RolesController")
	Controllers.Add("CategoriesController")
	Controllers.Add("StatusesController")
	Controllers.Add("PrioritiesController")
	Controllers.Add("TypesController")
	Controllers.Add("BrandsController")
	Controllers.Add("ModelsController")
End Sub

' Configure JSON response format
' When enabled, the default format is the original Map convert to JSON string
' When disabled (commented), standard API format will be returned
' Standard JSON object has 'm', 'e', 's', 'r', 'a' keys where the response (r) is a list
Public Sub ConfigureResponse
	' =======================================================================
	' Check example: ide://goto?Module=Utility&Sub=ReturnSimpleHttpResponse
	' =======================================================================
	'SimpleResponse = True
	'SimpleResponseFormat = "Map"
End Sub

' Display some information in Logs (debug) or terminal (release)
' You may edit your own text
Public Sub ConfigureWelcomeText
	Log($"Support server (version = ${VERSION}) is running on port ${srvr.Port}${IIf(srvr.SslPort > 0, $" (redirecting to port ${srvr.SslPort})"$, "")}"$)
	Log($"Open the following URL from your web browser (if help is enabled)"$)
	Log(ROOT_URL & ROOT_PATH & "help")
End Sub

#Region Additional Configurations
' This configuration is automatically read from the values in Config.ini
' By default, server port is set to 8080
Public Sub ConfigurePort
	SERVER_PORT = Config.Get("ServerPort")
	If SERVER_PORT = 0 Then
		Log($"Server Port is not set!"$)
		Log($"Application is terminated."$)
		ExitApplication
	End If
	srvr.Port = SERVER_PORT
End Sub

' This configuration is automatically read from the values in Config.ini
' By default, SSL port is disabled
Public Sub ConfigureSSL
	SSL_PORT = Config.Get("SSLPort") : If IsNumber(SSL_PORT) = False Then SSL_PORT = 0
	If SSL_PORT = 0 Then Return
	
	Dim KeyStoreDir As String = Config.Get("SSL_KEYSTORE_DIR")
	Dim KeyStoreFile As String = Config.Get("SSL_KEYSTORE_FILE")
	Dim KeyStorePassword As String = Config.Get("SSL_KEYSTORE_PASSWORD")
	
	Dim ssl As SslConfiguration
	ssl.Initialize
	ssl.SetKeyStorePath(KeyStoreDir, KeyStoreFile)
	ssl.KeyStorePassword = KeyStorePassword
	'ssl.KeyManagerPassword = ""
	srvr.SetSslConfiguration(ssl, SSL_PORT)
	
	If SSL_PORT <> 0 Then
		' Update ROOT_URL
		ROOT_URL = ROOT_URL.Replace("http:", "https:")
		ROOT_URL = ROOT_URL.Replace($":${SERVER_PORT}"$, $":${SSL_PORT}"$)
	End If
	Config.Put("ROOT_URL", ROOT_URL)
	
	'add filter to redirect all traffic from http to https (optional)
	srvr.AddFilter("/*", "HttpsFilter", False)
End Sub

' This configuration is use for Cross Origin in JavaScript call
' By default, no control is implemented
Public Sub ConfigureCORS
	#Region Example
	' allowedOrigins = "*" or "http://google.com"
	' allowedMethods = "*" or "GET,POST,HEAD"
	' allowedHeaders = "*" or "X-Requested-With,Content-Type,Accept,Origin"
	' Eg. ConfigureCORS(ROOT_PATH & "account/*", "*", "", "")
	' Reference: https://www.b4x.com/android/forum/threads/jetty-cross-origin-filter-to-be-added-to-jserver-library.85641/
	#End Region
	Dim Paths As List
	Paths.Initialize
	
	'Paths.Add(CreateMap("path": "*", "origins": "*", "methods": "POST,PUT,DELETE", "headers": "*")) 		' All origins access (* methods not working)
	Paths.Add(CreateMap("path": ROOT_PATH & API_PATH & "v2/tickets/*", "origins": "http://localhost, http://127.0.0.1:3000", "methods": "POST,PUT,DELETE", "headers": "*")) ' vue.js prod/dev app
	
	For Each Item As Map In Paths
		Dim cors As CorsFilter
		cors.Initialize(Item.Get("path"), _
		CreateMap( _
		"allowedOrigins": Item.Get("origins"), _
		"allowedMethods": Item.Get("methods"), _
		"allowedHeaders": Item.Get("headers"), _
		"allowCredentials": "true", _
		"preflightMaxAge": 1800, _
		"chainPreflight": "false"))
		cors.AddToServer(srvr)
	Next
End Sub

' Set the public accessible folder and disallow browsing
Public Sub ConfigureStaticFiles
	' ========================================================
	' Share the asset files such as css, js, images and fonts
	' The default values will be applied if not set
	' ========================================================
	srvr.StaticFilesFolder = File.Combine(File.DirApp, "www")
	srvr.SetStaticFilesOptions(CreateMap("dirAllowed": False))
End Sub

' Use this to adjust server time offset (may not needed)
'
' Add the following line to Process_Globals
' <code>Public TIMEZONE As Int</code>
Public Sub ConfigureTimezone
	' ============================================================
	' Uncomment the following code
	' ============================================================
	TIMEZONE = Config.Get("TimeZone") : If IsNumber(TIMEZONE) = False Then TIMEZONE = 0
End Sub

' Initialize a database connector object
'
' Add <link>Connector|https://www.b4x.com/android/forum/threads/web-api-template-2.143310/#post-908109</link> class to the Modules tab
' Add the following line to Process_Globals
' <code> Public DB As Connector</code>
Public Sub ConfigureDatabase
	' ============================================================
	' You need to select jSQL from the Libraries Manager
	' Add relevant JDBC driver using #AdditionalJar
	' Uncomment the following code
	' ============================================================
	DB.Initialize(Config)
End Sub
#End Region